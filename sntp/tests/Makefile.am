NULL =
BUILT_SOURCES =

check_PROGRAMS = 
if BUILD_SNTP
check_PROGRAMS += tests
endif

sntp_objs = ..

sntp_SOURCES_USED =			\
	$(sntp_objs)/crypto.o		\
	$(sntp_objs)/kod_management.o	\
	$(sntp_objs)/log.o		\
	$(sntp_objs)/main.o		\
	$(sntp_objs)/networking.o	\
	$(sntp_objs)/sntp-opts.o	\
	$(sntp_objs)/utilities.o	\
	$(sntp_objs)/version.o		\
	$(NULL)

base_SOURCES =				\
	$(srcdir)/../tests_main.cpp	\
	sntptest.cpp			\
	$(NULL)

tests_SOURCES =			\
	$(base_SOURCES)		\
	crypto.cpp		\
	keyFile.cpp		\
	kodDatabase.cpp		\
	kodFile.cpp		\
	networking.cpp		\
	packetHandling.cpp	\
	packetProcessing.cpp	\
	utilities.cpp		\
	$(NULL)

noinst_HEADERS =		\
	sntptest.h		\
	fileHandlingTest.h	\
	$(NULL)

dist_check_SCRIPTS =	test-driver

EXTRA_DIST =	data

CLEANFILES =				\
	data/kod-output-multiple	\
	data/kod-output-single		\
	data/debug-output-pkt		\
	data/debug-output-lfp-dec	\
	data/kod-output-blank		\
	data/debug-output-lfp-bin	\
	data/debug-output-lfp-hex	\
	$(NULL)

LDADD =						\
	$(LIBOPTS_LDADD)			\
	$(LDADD_LIBEVENT)			\
	$(top_builddir)/../libntp/libntp.a	\
	$(LDADD_LIBNTP)				\
	$(LCRYPTO)				\
	$(GTEST_LDFLAGS)			\
	$(GTEST_LIBS)				\
	$(sntp_SOURCES_USED)			\
	$(NULL)

AM_CFLAGS   = $(CFLAGS_NTP)
AM_CXXFLAGS = $(GTEST_CXXFLAGS)

AM_CPPFLAGS  = $(SNTP_INCS)
AM_CPPFLAGS += -I$(srcdir)/..
AM_CPPFLAGS += -I$(top_srcdir)/../tests
AM_CPPFLAGS += $(LIBOPTS_CFLAGS)
AM_CPPFLAGS += $(CPPFLAGS_LIBEVENT)
AM_CPPFLAGS += $(GTEST_CPPFLAGS)
AM_CPPFLAGS += $(CPPFLAGS_NTP)

TESTS = 

TEST_INPUT_DIR = $(abs_srcdir)/data
TEST_OUTPUT_DIR = $(abs_builddir)/data

TESTS_ENVIRONMENT = $(top_srcdir)/tests/test-driver $(TEST_INPUT_DIR) $(TEST_OUTPUT_DIR)

if !NTP_CROSSCOMPILE
TESTS += $(check_PROGRAMS)
endif

## check-libntp.mf - automake fragment
## slightly adapted for deeper directory

BUILT_SOURCES	+= check-libntp
CLEANFILES	+= check-libntp

check-libntp: ../../libntp/libntp.a
	@echo stamp > $@

../../libntp/libntp.a:
	cd ../../libntp && $(MAKE) libntp.a

include $(top_srcdir)/depsver.mf
include $(top_srcdir)/includes.mf
