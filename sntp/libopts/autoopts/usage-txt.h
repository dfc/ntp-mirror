/*   -*- buffer-read-only: t -*- vi: set ro:
 *  
 *  DO NOT EDIT THIS FILE   (usage-txt.h)
 *  
 *  It has been AutoGen-ed  August 11, 2012 at 09:41:15 AM by AutoGen 5.16.2pre7
 *  From the definitions    usage-txt.def
 *  and the template file   usage-txt.tpl
 *
 *  This file handles all the bookkeeping required for tracking all the little
 *  tiny strings used by the AutoOpts library.  There are 146
 *  of them.  This is not versioned because it is entirely internal to the
 *  library and accessed by client code only in a very well-controlled way:
 *  they may substitute translated strings using a procedure that steps through
 *  all the string pointers.
 *
 *  Copyright (C) 1992-2012 Bruce Korb, all rights reserved.
 *  This is free software. It is licensed for use, modification and
 *  redistribution under the terms of the
 *  GNU Lesser General Public License, version 3 or later
 *     <http://gnu.org/licenses/lgpl.html>
 *
 *  AutoOpts is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published
 *  by the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  AutoOpts is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU Lesser General Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.";
 */
#ifndef AUTOOPTS_USAGE_TXT_H_GUARD
#define AUTOOPTS_USAGE_TXT_H_GUARD 1

#undef  cch_t
#define cch_t char const

/*
 *  One structure to hold all the pointers to all the stringlets.
 */
typedef struct {
  int       field_ct;
  char*     utpz_GnuBoolArg;
  char*     utpz_GnuKeyArg;
  char*     utpz_GnuFileArg;
  char*     utpz_GnuKeyLArg;
  char*     utpz_GnuTimeArg;
  char*     utpz_GnuNumArg;
  char*     utpz_GnuStrArg;
  cch_t*    apz_str[ 139 ];
} usage_text_t;

/*
 *  Declare the global structure with all the pointers to translated
 *  strings.  This is then used by the usage generation procedure.
 */
extern usage_text_t option_usage_text;

#if defined(AUTOOPTS_INTERNAL) /* DEFINE ALL THE STRINGS = = = = = */
/*
 *  Provide a mapping from a short name to fields in this structure.
 */
#define zAO_Alloc             (option_usage_text.apz_str[  0])
#define zAO_Bad               (option_usage_text.apz_str[  1])
#define zAO_Big               (option_usage_text.apz_str[  2])
#define zAO_Err               (option_usage_text.apz_str[  3])
#define zAO_Realloc           (option_usage_text.apz_str[  4])
#define zAO_Sml               (option_usage_text.apz_str[  5])
#define zAO_Strdup            (option_usage_text.apz_str[  6])
#define zAO_Ver               (option_usage_text.apz_str[  7])
#define zAO_Woops             (option_usage_text.apz_str[  8])
#define zAliasRange           (option_usage_text.apz_str[  9])
#define zAll                  (option_usage_text.apz_str[ 10])
#define zAlt                  (option_usage_text.apz_str[ 11])
#define zAmbigKey             (option_usage_text.apz_str[ 12])
#define zAmbigList            (option_usage_text.apz_str[ 13])
#define zAmbigOptStr          (option_usage_text.apz_str[ 14])
#define zAmbiguous            (option_usage_text.apz_str[ 15])
#define zArgsMust             (option_usage_text.apz_str[ 16])
#define zAtMost               (option_usage_text.apz_str[ 17])
#define zAuto                 (option_usage_text.apz_str[ 18])
#define zBadPipe              (option_usage_text.apz_str[ 19])
#define zBadVerArg            (option_usage_text.apz_str[ 20])
#define zCantFmt              (option_usage_text.apz_str[ 21])
#define zCantSave             (option_usage_text.apz_str[ 22])
#define zCfgAO_Flags          (option_usage_text.apz_str[ 23])
#define zCfgProg              (option_usage_text.apz_str[ 24])
#define zDefaultOpt           (option_usage_text.apz_str[ 25])
#define zDis                  (option_usage_text.apz_str[ 26])
#define zDisabledErr          (option_usage_text.apz_str[ 27])
#define zDisabledOpt          (option_usage_text.apz_str[ 28])
#define zDisabledWhy          (option_usage_text.apz_str[ 29])
#define zEnab                 (option_usage_text.apz_str[ 30])
#define zEquiv                (option_usage_text.apz_str[ 31])
#define zErrOnly              (option_usage_text.apz_str[ 32])
#define zExamineFmt           (option_usage_text.apz_str[ 33])
#define zFiveSpaces           (option_usage_text.apz_str[ 34])
#define zFlagOkay             (option_usage_text.apz_str[ 35])
#define zFmtFmt               (option_usage_text.apz_str[ 36])
#define zForkFail             (option_usage_text.apz_str[ 37])
#define zFreopenFail          (option_usage_text.apz_str[ 38])
#define zFSErrOptLoad         (option_usage_text.apz_str[ 39])
#define zFSErrReadFile        (option_usage_text.apz_str[ 40])
#define zFSOptError           (option_usage_text.apz_str[ 41])
#define zFSOptErrMayExist     (option_usage_text.apz_str[ 42])
#define zFSOptErrMustExist    (option_usage_text.apz_str[ 43])
#define zFSOptErrNoExist      (option_usage_text.apz_str[ 44])
#define zFSOptErrOpen         (option_usage_text.apz_str[ 45])
#define zFSOptErrFopen        (option_usage_text.apz_str[ 46])
#define zFileCannotExist      (option_usage_text.apz_str[ 47])
#define zFileMustExist        (option_usage_text.apz_str[ 48])
#define zGenshell             (option_usage_text.apz_str[ 49])
#define zGnuBoolArg           (option_usage_text.utpz_GnuBoolArg)
#define zGnuBreak             (option_usage_text.apz_str[ 50])
#define zGnuKeyArg            (option_usage_text.utpz_GnuKeyArg)
#define zGnuFileArg           (option_usage_text.utpz_GnuFileArg)
#define zGnuKeyLArg           (option_usage_text.utpz_GnuKeyLArg)
#define zGnuTimeArg           (option_usage_text.utpz_GnuTimeArg)
#define zGnuNestArg           (option_usage_text.apz_str[ 51])
#define zGnuNumArg            (option_usage_text.utpz_GnuNumArg)
#define zGnuOptArg            (option_usage_text.apz_str[ 52])
#define zGnuOptFmt            (option_usage_text.apz_str[ 53])
#define zGnuStrArg            (option_usage_text.utpz_GnuStrArg)
#define zIllOptChr            (option_usage_text.apz_str[ 54])
#define zIllOptStr            (option_usage_text.apz_str[ 55])
#define zIllVendOptStr        (option_usage_text.apz_str[ 56])
#define zIntRange             (option_usage_text.apz_str[ 57])
#define zInvalOptDesc         (option_usage_text.apz_str[ 58])
#define zInvalOptName         (option_usage_text.apz_str[ 59])
#define zLowerBits            (option_usage_text.apz_str[ 60])
#define zMembers              (option_usage_text.apz_str[ 61])
#define zMisArg               (option_usage_text.apz_str[ 62])
#define zMultiEquiv           (option_usage_text.apz_str[ 63])
#define zMust                 (option_usage_text.apz_str[ 64])
#define zNeedOne              (option_usage_text.apz_str[ 65])
#define zNoArg                (option_usage_text.apz_str[ 66])
#define zNoArgs               (option_usage_text.apz_str[ 67])
#define zNoCreat              (option_usage_text.apz_str[ 68])
#define zNoFlags              (option_usage_text.apz_str[ 69])
#define zNoKey                (option_usage_text.apz_str[ 70])
#define zNoLim                (option_usage_text.apz_str[ 71])
#define zNoPreset             (option_usage_text.apz_str[ 72])
#define zNoResetArg           (option_usage_text.apz_str[ 73])
#define zNoRq_NoShrtTtl       (option_usage_text.apz_str[ 74])
#define zNoRq_ShrtTtl         (option_usage_text.apz_str[ 75])
#define zNoStat               (option_usage_text.apz_str[ 76])
#define zNoState              (option_usage_text.apz_str[ 77])
#define zNone                 (option_usage_text.apz_str[ 78])
#define zNotDef               (option_usage_text.apz_str[ 79])
#define zNotCmdOpt            (option_usage_text.apz_str[ 80])
#define zNotEnough            (option_usage_text.apz_str[ 81])
#define zNotFile              (option_usage_text.apz_str[ 82])
#define zNotNumber            (option_usage_text.apz_str[ 83])
#define zNotDate              (option_usage_text.apz_str[ 84])
#define zNotDuration          (option_usage_text.apz_str[ 85])
#define zNrmOptFmt            (option_usage_text.apz_str[ 86])
#define zNumberOpt            (option_usage_text.apz_str[ 87])
#define zOnlyOne              (option_usage_text.apz_str[ 88])
#define zOptsOnly             (option_usage_text.apz_str[ 89])
#define zOutputFail           (option_usage_text.apz_str[ 90])
#define zPathFmt              (option_usage_text.apz_str[ 91])
#define zPlsSendBugs          (option_usage_text.apz_str[ 92])
#define zPreset               (option_usage_text.apz_str[ 93])
#define zPresetFile           (option_usage_text.apz_str[ 94])
#define zPresetIntro          (option_usage_text.apz_str[ 95])
#define zProhib               (option_usage_text.apz_str[ 96])
#define zReorder              (option_usage_text.apz_str[ 97])
#define zRange                (option_usage_text.apz_str[ 98])
#define zRangeAbove           (option_usage_text.apz_str[ 99])
#define zRangeLie             (option_usage_text.apz_str[100])
#define zRangeOnly            (option_usage_text.apz_str[101])
#define zRangeOr              (option_usage_text.apz_str[102])
#define zRangeErr             (option_usage_text.apz_str[103])
#define zRangeExact           (option_usage_text.apz_str[104])
#define zRangeScaled          (option_usage_text.apz_str[105])
#define zRangeUpto            (option_usage_text.apz_str[106])
#define zResetNotConfig       (option_usage_text.apz_str[107])
#define zReqFmt               (option_usage_text.apz_str[108])
#define zReqOptFmt            (option_usage_text.apz_str[109])
#define zReqThese             (option_usage_text.apz_str[110])
#define zReq_NoShrtTtl        (option_usage_text.apz_str[111])
#define zReq_ShrtTtl          (option_usage_text.apz_str[112])
#define zSepChars             (option_usage_text.apz_str[113])
#define zSetMemberSettings    (option_usage_text.apz_str[114])
#define zShrtGnuOptFmt        (option_usage_text.apz_str[115])
#define zSixSpaces            (option_usage_text.apz_str[116])
#define zStdBoolArg           (option_usage_text.apz_str[117])
#define zStdBreak             (option_usage_text.apz_str[118])
#define zStdFileArg           (option_usage_text.apz_str[119])
#define zStdKeyArg            (option_usage_text.apz_str[120])
#define zStdKeyLArg           (option_usage_text.apz_str[121])
#define zStdTimeArg           (option_usage_text.apz_str[122])
#define zStdNestArg           (option_usage_text.apz_str[123])
#define zStdNoArg             (option_usage_text.apz_str[124])
#define zStdNumArg            (option_usage_text.apz_str[125])
#define zStdOptArg            (option_usage_text.apz_str[126])
#define zStdReqArg            (option_usage_text.apz_str[127])
#define zStdStrArg            (option_usage_text.apz_str[128])
#define zTabHyp               (option_usage_text.apz_str[129])
#define zTabHypAnd            (option_usage_text.apz_str[130])
#define zTabout               (option_usage_text.apz_str[131])
#define zThreeSpaces          (option_usage_text.apz_str[132])
#define zTooLarge             (option_usage_text.apz_str[133])
#define zTwoSpaces            (option_usage_text.apz_str[134])
#define zUpTo                 (option_usage_text.apz_str[135])
#define zValidKeys            (option_usage_text.apz_str[136])
#define zVendOptsAre          (option_usage_text.apz_str[137])
#define zVendIntro            (option_usage_text.apz_str[138])

  /*
   *  First, set up the strings.  Some of these are writable.  These are all in
   *  English.  This gets compiled into libopts and is distributed here so that
   *  xgettext (or equivalents) can extract these strings for translation.
   */

  static char    eng_zGnuBoolArg[] = "=T/F";
  static char    eng_zGnuKeyArg[] = "=KWd";
  static char    eng_zGnuFileArg[] = "=file";
  static char    eng_zGnuKeyLArg[] = "=Mbr";
  static char    eng_zGnuTimeArg[] = "=Tim";
  static char    eng_zGnuNumArg[] = "=num";
  static char    eng_zGnuStrArg[] = "=str";
static char const usage_txt[4660] =
/*     0 */ "malloc of %d bytes failed\n\0"
/*    27 */ "AutoOpts function called without option descriptor\n\0"
/*    79 */ "\tThis exceeds the compiled library version:  \0"
/*   125 */ "Automated Options Processing Error!\n"
            "\t%s called AutoOpts function with structure version %d:%d:%d.\n\0"
/*   224 */ "realloc of %d bytes at 0x%p failed\n\0"
/*   260 */ "\tThis is less than the minimum library version:  \0"
/*   310 */ "strdup of %d byte string failed\n\0"
/*   343 */ "Automated Options version %s\n"
            "\tcopyright (c) 1999-2012 by Bruce Korb - all rights reserved\n\0"
/*   434 */ "AutoOpts lib error: defaulted to option with optional arg\n\0"
/*   493 */ "(AutoOpts bug):  Aliasing option is out of range.\0"
/*   543 */ "all\0"
/*   547 */ "\t\t\t\t- an alternate for %s\n\0"
/*   574 */ "%s error:  the keyword `%s' is ambiguous for %s\n\0"
/*   623 */ "  The following options match:\n\0"
/*   655 */ "%s: ambiguous option name: %s (matches %d options)\n\0"
/*   707 */ "  %s%s\n\0"
/*   715 */ "%s: Command line arguments required\n\0"
/*   752 */ "%d %s%s options allowed\n\0"
/*   777 */ "version, usage and configuration options:\0"
/*   819 */ "Error %d (%s) from the pipe(2) syscall\n\0"
/*   859 */ "ERROR: version option argument '%c' invalid.  Use:\n"
            "\t'v' - version only\n"
            "\t'c' - version and copyright\n"
            "\t'n' - version and copyright notice\n\0"
/*   996 */ "ERROR:  %s option conflicts with the %s option\n\0"
/*  1044 */ "%s(optionSaveState): error: cannot allocate %d bytes\n\0"
/*  1098 */ "auto-options\0"
/*  1111 */ "program\0"
/*  1119 */ "\t\t\t\t- default option for unnamed options\n\0"
/*  1161 */ "\t\t\t\t- disabled as --%s\n\0"
/*  1185 */ "%s: The ``%s'' option has been disabled\0"
/*  1225 */ " --- %-14s %s\n\0"
/*  1240 */ "This option has been disabled\0"
/*  1270 */ "\t\t\t\t- enabled by default\n\0"
/*  1296 */ "-equivalence\0"
/*  1309 */ "ERROR:  only \0"
/*  1323 */ " - examining environment variables named %s_*\n\0"
/*  1370 */ "     \0"
/*  1376 */ "Options are specified by doubled hyphens and their name or by a single\n"
            "hyphen and the flag character.\n\0"
/*  1479 */ "%%-%ds %%s\n\0"
/*  1491 */ "fs error %d (%s) on fork - cannot obtain %s usage\n\0"
/*  1542 */ "fs error %d (%s) on freopen\n\0"
/*  1571 */ "File error %d (%s) opening %s for loading options\n\0"
/*  1622 */ "fs error %d (%s) reading file %s\n\0"
/*  1656 */ "fs error %d (%s) on %s %s for option %s\n\0"
/*  1697 */ "stat-ing for directory\0"
/*  1720 */ "stat-ing for regular file\0"
/*  1746 */ "stat-ing for non-existant file\0"
/*  1777 */ "open-ing file\0"
/*  1791 */ "fopen-ing file\0"
/*  1806 */ "\t\t\t\t- file must not pre-exist\n\0"
/*  1837 */ "\t\t\t\t- file must pre-exist\n\0"
/*  1864 */ "\n"
            "= = = = = = = =\n\n"
            "This incarnation of genshell will produce\n"
            "a shell script to parse the options for %s:\n\n\0"
/*  1970 */ "\n"
            "%s\n\n\0"
/*  1976 */ "=Cplx\0"
/*  1982 */ "[=arg]\0"
/*  1989 */ "--%2$s%1$s\0"
/*  2000 */ "%s: illegal option -- %c\n\0"
/*  2026 */ "%s: illegal option -- %s\n\0"
/*  2052 */ "%s: unknown vendor extension option -- %s\n\0"
/*  2095 */ "  or an integer from %d through %d\n\0"
/*  2131 */ "AutoOpts ERROR:  invalid option descriptor for %s\n\0"
/*  2182 */ "%s: invalid option name: %s\n\0"
/*  2211 */ "  or an integer mask with any of the lower %d bits set\n\0"
/*  2267 */ "\t\t\t\t- is a set membership option\n\0"
/*  2301 */ "%s: option `%s' requires an argument\n\0"
/*  2339 */ "Equivalenced option '%s' was equivalenced to both\n"
            "\t'%s' and '%s'\0"
/*  2404 */ "\t\t\t\t- must appear between %d and %d times\n\0"
/*  2447 */ "ERROR:  The %s option is required\n\0"
/*  2482 */ "%s: option `%s' cannot have an argument\n\0"
/*  2523 */ "%s: Command line arguments not allowed\n\0"
/*  2563 */ "error %d (%s) creating %s\n\0"
/*  2590 */ "Options are specified by single or double hyphens and their name.\n\0"
/*  2657 */ "%s error:  `%s' does not match any %s keywords\n\0"
/*  2705 */ "\t\t\t\t- may appear multiple times\n\0"
/*  2738 */ "\t\t\t\t- may not be preset\n\0"
/*  2763 */ "The 'reset-option' option requires an argument\n\0"
/*  2811 */ "   Arg Option-Name    Description\n\0"
/*  2846 */ "  Flg Arg Option-Name    Description\n\0"
/*  2884 */ "error %d (%s) stat-ing %s\n\0"
/*  2911 */ "%s(optionRestore): error: no saved option state\n\0"
/*  2960 */ "none\0"
/*  2965 */ "'%s' not defined\n\0"
/*  2983 */ "'%s' is not a command line option\n\0"
/*  3018 */ "ERROR:  The %s option must appear %d times\n\0"
/*  3062 */ "error:  cannot load options from non-regular file %s\n\0"
/*  3116 */ "%s error:  `%s' is not a recognizable number\n\0"
/*  3162 */ "%s error:  `%s' is not a recognizable date/time\n\0"
/*  3211 */ "%s error:  `%s' is not a recognizable time duration\n\0"
/*  3264 */ " %3s %s\0"
/*  3272 */ "The '-#<number>' option may omit the hash char\n\0"
/*  3320 */ "one %s%s option allowed\n\0"
/*  3345 */ "All arguments are named options.\n\0"
/*  3379 */ "Write failure to output file\0"
/*  3408 */ " - reading file %s\0"
/*  3427 */ "\n"
            "please send bug reports to:  %s\n\0"
/*  3461 */ "\t\t\t\t- may NOT appear - preset only\n\0"
/*  3497 */ "#  preset/initialization file\n"
            "#  %s#\n\0"
/*  3535 */ "\n"
            "The following option preset mechanisms are supported:\n\0"
/*  3591 */ "prohibits these options:\n\0"
/*  3617 */ "Operands and options may be intermixed.  They will be reordered.\n\0"
/*  3683 */ "%s%ld to %ld\0"
/*  3696 */ "%sgreater than or equal to %ld\0"
/*  3727 */ "%sIt must lie in one of the ranges:\n\0"
/*  3764 */ "%sIt must be in the range:\n\0"
/*  3792 */ ", or\n\0"
/*  3798 */ "%s error:  %s option value %ld is out of range.\n\0"
/*  3847 */ "%s%ld exactly\0"
/*  3861 */ "%sis scalable with a suffix: k/K/m/M/g/G/t/T\n\0"
/*  3907 */ "%sless than or equal to %ld\0"
/*  3935 */ "The --reset-option has not been configured.\n\0"
/*  3980 */ "ERROR:  %s option requires the %s option\n\0"
/*  4022 */ " %3s %-14s %s\0"
/*  4036 */ "requires these options:\n\0"
/*  4061 */ "   Arg Option-Name   Req?  Description\n\0"
/*  4101 */ "  Flg Arg Option-Name   Req?  Description\n\0"
/*  4144 */ "-_^\0"
/*  4148 */ "or you may use a numeric representation.  Preceding these with a '!' will\n"
            "clear the bits, specifying 'none' will clear all bits, and 'all' will set them\n"
            "all.  Multiple entries may be passed as an option argument list.\n\0"
/*  4367 */ "%s\0"
/*  4370 */ "      \0"
/*  4377 */ "T/F\0"
/*  4381 */ "\n"
            "%s\n\n"
            "%s\0"
/*  4389 */ "Fil\0"
/*  4393 */ "KWd\0"
/*  4397 */ "Mbr\0"
/*  4401 */ "Tim\0"
/*  4405 */ "Cpx\0"
/*  4409 */ "no \0"
/*  4413 */ "Num\0"
/*  4417 */ "opt\0"
/*  4421 */ "YES\0"
/*  4425 */ "Str\0"
/*  4429 */ "\t\t\t\t- \0"
/*  4436 */ "\t\t\t\t-- and \0"
/*  4448 */ "\t\t\t\t%s\n\0"
/*  4456 */ "   \0"
/*  4460 */ "%s error:  %s exceeds %s keyword count\n\0"
/*  4500 */ "  \0"
/*  4503 */ "\t\t\t\t- may appear up to %d times\n\0"
/*  4536 */ "The valid \"%s\" option keywords are:\n\0"
/*  4573 */ "These additional options are:\0"
/*  4603 */ "The next option supports vendor supported extra options:";


  /*
   *  Now, define (and initialize) the structure that contains
   *  the pointers to all these strings.
   *  Aren't you glad you don't maintain this by hand?
   */
  usage_text_t option_usage_text = {
    146,
    eng_zGnuBoolArg, eng_zGnuKeyArg,  eng_zGnuFileArg, eng_zGnuKeyLArg,
    eng_zGnuTimeArg, eng_zGnuNumArg,  eng_zGnuStrArg,
    {
      usage_txt +   0, usage_txt +  27, usage_txt +  79, usage_txt + 125,
      usage_txt + 224, usage_txt + 260, usage_txt + 310, usage_txt + 343,
      usage_txt + 434, usage_txt + 493, usage_txt + 543, usage_txt + 547,
      usage_txt + 574, usage_txt + 623, usage_txt + 655, usage_txt + 707,
      usage_txt + 715, usage_txt + 752, usage_txt + 777, usage_txt + 819,
      usage_txt + 859, usage_txt + 996, usage_txt +1044, usage_txt +1098,
      usage_txt +1111, usage_txt +1119, usage_txt +1161, usage_txt +1185,
      usage_txt +1225, usage_txt +1240, usage_txt +1270, usage_txt +1296,
      usage_txt +1309, usage_txt +1323, usage_txt +1370, usage_txt +1376,
      usage_txt +1479, usage_txt +1491, usage_txt +1542, usage_txt +1571,
      usage_txt +1622, usage_txt +1656, usage_txt +1697, usage_txt +1720,
      usage_txt +1746, usage_txt +1777, usage_txt +1791, usage_txt +1806,
      usage_txt +1837, usage_txt +1864, usage_txt +1970, usage_txt +1976,
      usage_txt +1982, usage_txt +1989, usage_txt +2000, usage_txt +2026,
      usage_txt +2052, usage_txt +2095, usage_txt +2131, usage_txt +2182,
      usage_txt +2211, usage_txt +2267, usage_txt +2301, usage_txt +2339,
      usage_txt +2404, usage_txt +2447, usage_txt +2482, usage_txt +2523,
      usage_txt +2563, usage_txt +2590, usage_txt +2657, usage_txt +2705,
      usage_txt +2738, usage_txt +2763, usage_txt +2811, usage_txt +2846,
      usage_txt +2884, usage_txt +2911, usage_txt +2960, usage_txt +2965,
      usage_txt +2983, usage_txt +3018, usage_txt +3062, usage_txt +3116,
      usage_txt +3162, usage_txt +3211, usage_txt +3264, usage_txt +3272,
      usage_txt +3320, usage_txt +3345, usage_txt +3379, usage_txt +3408,
      usage_txt +3427, usage_txt +3461, usage_txt +3497, usage_txt +3535,
      usage_txt +3591, usage_txt +3617, usage_txt +3683, usage_txt +3696,
      usage_txt +3727, usage_txt +3764, usage_txt +3792, usage_txt +3798,
      usage_txt +3847, usage_txt +3861, usage_txt +3907, usage_txt +3935,
      usage_txt +3980, usage_txt +4022, usage_txt +4036, usage_txt +4061,
      usage_txt +4101, usage_txt +4144, usage_txt +4148, usage_txt +4367,
      usage_txt +4370, usage_txt +4377, usage_txt +4381, usage_txt +4389,
      usage_txt +4393, usage_txt +4397, usage_txt +4401, usage_txt +4405,
      usage_txt +4409, usage_txt +4413, usage_txt +4417, usage_txt +4421,
      usage_txt +4425, usage_txt +4429, usage_txt +4436, usage_txt +4448,
      usage_txt +4456, usage_txt +4460, usage_txt +4500, usage_txt +4503,
      usage_txt +4536, usage_txt +4573, usage_txt +4603
    }
  };

#endif /* DO_TRANSLATIONS */
#endif /* AUTOOPTS_USAGE_TXT_H_GUARD */
