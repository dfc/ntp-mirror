@node ntpdc Invocation
@section Invoking ntpdc
@pindex ntpdc
@cindex vendor-specific NTPD control program
@ignore
# 
# EDIT THIS FILE WITH CAUTION  (invoke-ntpdc.texi)
# 
# It has been AutoGen-ed  October 23, 2012 at 06:07:40 AM by AutoGen 5.16.2
# From the definitions    ntpdc-opts.def
# and the template file   agtexi-cmd.tpl
@end ignore



@code{ntpdc}
is a utility program used to query
@code{ntpd(8)}
about its
current state and to request changes in that state.
It uses NTP mode 7 control message formats described in the source code.
The program may
be run either in interactive mode or controlled using command line
arguments.
Extensive state and statistics information is available
through the
@code{ntpdc}
interface.
In addition, nearly all the
configuration options which can be specified at startup using
ntpd's configuration file may also be specified at run time using
@code{ntpdc}.

This section was generated by @strong{AutoGen},
using the @code{agtexi-cmd} template and the option descriptions for the @code{ntpdc} program.
This software is released under the NTP license, <http://ntp.org/license>.

@menu
* ntpdc usage::                  ntpdc help/usage (@option{--help})
* ntpdc ipv4::                   ipv4 option (-4)
* ntpdc ipv6::                   ipv6 option (-6)
* ntpdc command::                command option (-c)
* ntpdc interactive::            interactive option (-i)
* ntpdc listpeers::              listpeers option (-l)
* ntpdc numeric::                numeric option (-n)
* ntpdc peers::                  peers option (-p)
* ntpdc showpeers::              showpeers option (-s)
* ntpdc config::                 presetting/configuring ntpdc
* ntpdc exit status::            exit status
* ntpdc Usage::                  Usage
* ntpdc See Also::               See Also
* ntpdc Authors::                Authors
* ntpdc Bugs::                   Bugs
@end menu

@node ntpdc usage
@subsection ntpdc help/usage (@option{--help})
@cindex ntpdc help

This is the automatically generated usage text for ntpdc.

The text printed is the same whether selected with the @code{help} option
(@option{--help}) or the @code{more-help} option (@option{--more-help}).  @code{more-help} will print
the usage text by passing it through a pager program.
@code{more-help} is disabled on platforms without a working
@code{fork(2)} function.  The @code{PAGER} environment variable is
used to select the program, defaulting to @file{more}.  Both will exit
with a status code of 0.

@exampleindent 0
@example
ntpdc - vendor-specific NTPD control program - Ver. 4.2.7p313
USAGE:  ntpdc [ -<flag> [<val>] | --<name>[@{=| @}<val>] ]... [ host ...]
  Flg Arg Option-Name    Description
   -4 no  ipv4           Force IPv4 DNS name resolution
                                - prohibits these options:
                                ipv6
   -6 no  ipv6           Force IPv6 DNS name resolution
                                - prohibits these options:
                                ipv4
   -c Str command        run a command and exit
                                - may appear multiple times
   -d no  debug-level    Increase debug verbosity level
                                - may appear multiple times
   -D Num set-debug-level Set the debug verbosity level
                                - may appear multiple times
   -i no  interactive    Force ntpq to operate in interactive mode
                                - prohibits these options:
                                command
                                listpeers
                                peers
                                showpeers
   -l no  listpeers      Print a list of the peers
                                - prohibits these options:
                                command
   -n no  numeric        numeric host addresses
   -p no  peers          Print a list of the peers
                                - prohibits these options:
                                command
   -s no  showpeers      Show a list of the peers
                                - prohibits these options:
                                command
      opt version        Output version information and exit
   -? no  help           Display extended usage information and exit
   -! no  more-help      Extended usage information passed thru pager
   -> opt save-opts      Save the option state to a config file
   -< Str load-opts      Load options from a config file
                                - disabled as --no-load-opts
                                - may appear multiple times

Options are specified by doubled hyphens and their name or by a single
hyphen and the flag character.



The following option preset mechanisms are supported:
 - reading file $HOME/.ntprc
 - reading file ./.ntprc
 - examining environment variables named NTPDC_*

please send bug reports to:  http://bugs.ntp.org, bugs@@ntp.org
@end example
@exampleindent 4

@node ntpdc ipv4
@subsection ipv4 option (-4)
@cindex ntpdc-ipv4

This is the ``force ipv4 dns name resolution'' option.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
must not appear in combination with any of the following options:
ipv6.
@end itemize

Force DNS resolution of following host names on the command line
to the IPv4 namespace.
@node ntpdc ipv6
@subsection ipv6 option (-6)
@cindex ntpdc-ipv6

This is the ``force ipv6 dns name resolution'' option.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
must not appear in combination with any of the following options:
ipv4.
@end itemize

Force DNS resolution of following host names on the command line
to the IPv6 namespace.
@node ntpdc command
@subsection command option (-c)
@cindex ntpdc-command

This is the ``run a command and exit'' option.
This option takes an argument string @file{cmd}.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
may appear an unlimited number of times.
@end itemize

The following argument is interpreted as an interactive format command
and is added to the list of commands to be executed on the specified
host(s).
@node ntpdc interactive
@subsection interactive option (-i)
@cindex ntpdc-interactive

This is the ``force ntpq to operate in interactive mode'' option.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
must not appear in combination with any of the following options:
command, listpeers, peers, showpeers.
@end itemize

Force ntpq to operate in interactive mode.  Prompts will be written
to the standard output and commands read from the standard input.
@node ntpdc listpeers
@subsection listpeers option (-l)
@cindex ntpdc-listpeers

This is the ``print a list of the peers'' option.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
must not appear in combination with any of the following options:
command.
@end itemize

Print a list of the peers known to the server as well as a summary of
their state. This is equivalent to the 'listpeers' interactive command.
@node ntpdc numeric
@subsection numeric option (-n)
@cindex ntpdc-numeric

This is the ``numeric host addresses'' option.
Output all host addresses in dotted-quad numeric format rather than
converting to the canonical host names. 
@node ntpdc peers
@subsection peers option (-p)
@cindex ntpdc-peers

This is the ``print a list of the peers'' option.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
must not appear in combination with any of the following options:
command.
@end itemize

Print a list of the peers known to the server as well as a summary
of their state. This is equivalent to the 'peers' interactive command.
@node ntpdc showpeers
@subsection showpeers option (-s)
@cindex ntpdc-showpeers

This is the ``show a list of the peers'' option.

@noindent
This option has some usage constraints.  It:
@itemize @bullet
@item
must not appear in combination with any of the following options:
command.
@end itemize

Print a list of the peers known to the server as well as a summary
of their state. This is equivalent to the 'dmpeers' interactive command.


@node ntpdc config
@subsection presetting/configuring ntpdc

Any option that is not marked as @i{not presettable} may be preset by
loading values from configuration ("rc" or "ini") files, and values from environment variables named @code{NTPDC} and @code{NTPDC_<OPTION_NAME>}.  @code{<OPTION_NAME>} must be one of
the options listed above in upper case and segmented with underscores.
The @code{NTPDC} variable will be tokenized and parsed like
the command line.  The remaining variables are tested for existence and their
values are treated like option arguments.


@noindent
@code{libopts} will search in 2 places for configuration files:
@itemize @bullet
@item
$HOME
@item
$PWD
@end itemize
The environment variables @code{HOME}, and @code{PWD}
are expanded and replaced when @file{ntpdc} runs.
For any of these that are plain files, they are simply processed.
For any that are directories, then a file named @file{.ntprc} is searched for
within that directory and processed.


Configuration files may be in a wide variety of formats.
The basic format is an option name followed by a value (argument) on the
same line.  Values may be separated from the option name with a colon,
equal sign or simply white space.  Values may be continued across multiple
lines by escaping the newline with a backslash.

Multiple programs may also share the same initialization file.
Common options are collected at the top, followed by program specific
segments.  The segments are separated by lines like:
@example
[NTPDC]
@end example
@noindent
or by
@example
<?program ntpdc>
@end example
@noindent
Do not mix these styles within one configuration file.

Compound values and carefully constructed string values may also be
specified using XML syntax:
@example
<option-name>
   <sub-opt>...&lt;...&gt;...</sub-opt>
</option-name>
@end example
@noindent
yielding an @code{option-name.sub-opt} string value of
@example
"...<...>..."
@end example
@code{AutoOpts} does not track suboptions.  You simply note that it is a
hierarchicly valued option.  @code{AutoOpts} does provide a means for searching
the associated name/value pair list (see: optionFindValue).

The command line options relating to configuration and/or usage help are:

@subsubheading version (-)

Print the program version to standard out, optionally with licensing
information, then exit 0.  The optional argument specifies how much licensing
detail to provide.  The default is to print just the version.  The licensing infomation may be selected with an option argument.  Only the
first letter of the argument is examined:

@table @samp
@item version
Only print the version.  This is the default.
@item copyright
Name the copyright usage licensing terms.
@item verbose
Print the full copyright usage licensing terms.
@end table

@node ntpdc exit status
@subsection ntpdc exit status

One of the following exit values will be returned:
@table @samp
@item 0 (EXIT_SUCCESS)
Successful program execution.
@item 1 (EXIT_FAILURE)
The operation failed or the command syntax was not valid.
@item 66 (EX_NOINPUT)
A specified configuration file could not be loaded.
@item 70 (EX_SOFTWARE)
libopts had an internal operational error.  Please report
it to autogen-users@@lists.sourceforge.net.  Thank you.
@end table
@node ntpdc Usage
@subsection ntpdc Usage
If one or more request options are included on the command line
when
@code{ntpdc}
is executed, each of the requests will be sent
to the NTP servers running on each of the hosts given as command
line arguments, or on localhost by default.
If no request options
are given,
@code{ntpdc}
will attempt to read commands from the
standard input and execute these on the NTP server running on the
first host given on the command line, again defaulting to localhost
when no other host is specified.
The
@code{ntpdc}
utility will prompt for
commands if the standard input is a terminal device.

The
@code{ntpdc}
utility uses NTP mode 7 packets to communicate with the
NTP server, and hence can be used to query any compatible server on
the network which permits it.
Note that since NTP is a UDP protocol
this communication will be somewhat unreliable, especially over
large distances in terms of network topology.
The
@code{ntpdc}
utility makes
no attempt to retransmit requests, and will time requests out if
the remote host is not heard from within a suitable timeout
time.

The operation of
@code{ntpdc}
are specific to the particular
implementation of the
@code{ntpd(8)}
daemon and can be expected to
work only with this and maybe some previous versions of the daemon.
Requests from a remote
@code{ntpdc}
utility which affect the
state of the local server must be authenticated, which requires
both the remote program and local server share a common key and key
identifier.

Note that in contexts where a host name is expected, a
@code{-4} qualifier preceding the host name forces DNS resolution to the IPv4 namespace,
while a
@code{-6} qualifier forces DNS resolution to the IPv6 namespace.
Specifying a command line option other than
@code{-i} or
@code{-n} will cause the specified query (queries) to be sent to
the indicated host(s) immediately.
Otherwise,
@code{ntpdc}
will
attempt to read interactive format commands from the standard
input.
.Ss
"Interactive
Commands"
Interactive format commands consist of a keyword followed by zero
to four arguments.
Only enough characters of the full keyword to
uniquely identify the command need be typed.
The output of a
command is normally sent to the standard output, but optionally the
output of individual commands may be sent to a file by appending a
.Ql
\&>
,
followed by a file name, to the command line.

A number of interactive format commands are executed entirely
within the
@code{ntpdc}
utility itself and do not result in NTP
mode 7 requests being sent to a server.
These are described
following.
@table @samp
@item Ic
@item Ic
A
.Sq
Ic
\&?
will print a list of all the command
keywords known to this incarnation of
@code{ntpdc}.
A
.Sq
Ic
\&?
followed by a command keyword will print function and usage
information about the command.
This command is probably a better
source of information about
@code{ntpq(8)}
than this manual
page.
@item Ic
Specify a time interval to be added to timestamps included in
requests which require authentication.
This is used to enable
(unreliable) server reconfiguration over long delay network paths
or between machines whose clocks are unsynchronized.
Actually the
server does not now require timestamps in authenticated requests,
so this command may be obsolete.
@item Ic
Set the host to which future queries will be sent.
Hostname may
be either a host name or a numeric address.
@item Ic
If
.Cm
yes
is specified, host names are printed in
information displays.
If
.Cm
no
is specified, numeric
addresses are printed instead.
The default is
.Cm
yes
,
unless
modified using the command line
@code{-n} switch.
@item Ic
This command allows the specification of a key number to be
used to authenticate configuration requests.
This must correspond
to a key number the server has been configured to use for this
purpose.
@item Ic
Exit
@code{ntpdc}.
@item Ic
This command prompts you to type in a password (which will not
be echoed) which will be used to authenticate configuration
requests.
The password must correspond to the key configured for
use by the NTP server for this purpose if such requests are to be
successful.
@item Ic
Specify a timeout period for responses to server queries.
The
default is about 8000 milliseconds.
Note that since
@code{ntpdc}
retries each query once after a timeout, the total waiting time for
a timeout will be twice the timeout value set.

@end multitable
.Ss
"Control
Message
Commands"
Query commands result in NTP mode 7 packets containing requests for
information being sent to the server.
These are read-only commands
in that they make no modification of the server configuration
state.
@table @samp
@item Ic
Obtains and prints a brief list of the peers for which the
server is maintaining state.
These should include all configured
peer associations as well as those peers whose stratum is such that
they are considered by the server to be possible future
synchronization candidates.
@item Ic
Obtains a list of peers for which the server is maintaining
state, along with a summary of that state.
Summary information
includes the address of the remote peer, the local interface
address (0.0.0.0 if a local address has yet to be determined), the
stratum of the remote peer (a stratum of 16 indicates the remote
peer is unsynchronized), the polling interval, in seconds, the
reachability register, in octal, and the current estimated delay,
offset and dispersion of the peer, all in seconds.

The character in the left margin indicates the mode this peer
entry is operating in.
A
.Ql
\&+
denotes symmetric active, a
.Ql
\&-
indicates symmetric passive, a
.Ql
\&=
means the
remote server is being polled in client mode, a
.Ql
\&^
indicates that the server is broadcasting to this address, a
.Ql
\&~
denotes that the remote peer is sending broadcasts and a
.Ql
\&~
denotes that the remote peer is sending broadcasts and a
.Ql
\&*
marks the peer the server is currently synchronizing
to.

The contents of the host field may be one of four forms.
It may
be a host name, an IP address, a reference clock implementation
name with its parameter or
.Fn
REFCLK
"implementation_number"
"parameter"
.
On
.Ic
hostnames
.Cm
no
only IP-addresses
will be displayed.
@item Ic
A slightly different peer summary list.
Identical to the output
of the
.Ic
peers
command, except for the character in the
leftmost column.
Characters only appear beside peers which were
included in the final stage of the clock selection algorithm.
A
.Ql
\&.
indicates that this peer was cast off in the falseticker
detection, while a
.Ql
\&+
indicates that the peer made it
through.
A
.Ql
\&*
denotes the peer the server is currently
synchronizing with.
@item Ic
Shows a detailed display of the current peer variables for one
or more peers.
Most of these values are described in the NTP
Version 2 specification.
@item Ic
Show per-peer statistic counters associated with the specified
peer(s).
@item Ic
Obtain and print information concerning a peer clock.
The
values obtained provide information on the setting of fudge factors
and other clock performance information.
@item Ic
Obtain and print kernel phase-lock loop operating parameters.
This information is available only if the kernel has been specially
modified for a precision timekeeping function.
@item Ic
Print the values of selected loop filter variables.
The loop
filter is the part of NTP which deals with adjusting the local
system clock.
The
.Sq
offset
is the last offset given to the
loop filter by the packet processing code.
The
.Sq
frequency
is the frequency error of the local clock in parts-per-million
(ppm).
The
.Sq
time_const
controls the stiffness of the
phase-lock loop and thus the speed at which it can adapt to
oscillator drift.
The
.Sq
watchdog
timer
value is the number
of seconds which have elapsed since the last sample offset was
given to the loop filter.
The
.Cm
oneline
and
.Cm
multiline
options specify the format in which this
information is to be printed, with
.Cm
multiline
as the
default.
@item Ic
Print a variety of system state variables, i.e., state related
to the local server.
All except the last four lines are described
in the NTP Version 3 specification, RFC-1305.

The
.Sq
system
flags
show various system flags, some of
which can be set and cleared by the
.Ic
enable
and
.Ic
disable
configuration commands, respectively.
These are
the
.Cm
auth
,
.Cm
bclient
,
.Cm
monitor
,
.Cm
pll
,
.Cm
pps
and
.Cm
stats
flags.
See the
@code{ntpd(8)}
documentation for the meaning of these flags.
There
are two additional flags which are read only, the
.Cm
kernel_pll
and
.Cm
kernel_pps
.
These flags indicate
the synchronization status when the precision time kernel
modifications are in use.
The
.Sq
kernel_pll
indicates that
the local clock is being disciplined by the kernel, while the
.Sq
kernel_pps
indicates the kernel discipline is provided by the PPS
signal.

The
.Sq
stability
is the residual frequency error remaining
after the system frequency correction is applied and is intended for
maintenance and debugging.
In most architectures, this value will
initially decrease from as high as 500 ppm to a nominal value in
the range .01 to 0.1 ppm.
If it remains high for some time after
starting the daemon, something may be wrong with the local clock,
or the value of the kernel variable
.Va
kern.clockrate.tick
may be
incorrect.

The
.Sq
broadcastdelay
shows the default broadcast delay,
as set by the
.Ic
broadcastdelay
configuration command.

The
.Sq
authdelay
shows the default authentication delay,
as set by the
.Ic
authdelay
configuration command.
@item Ic
Print statistics counters maintained in the protocol
module.
@item Ic
Print statistics counters related to memory allocation
code.
@item Ic
Print statistics counters maintained in the input-output
module.
@item Ic
Print statistics counters maintained in the timer/event queue
support code.
@item Ic
Obtain and print the server's restriction list.
This list is
(usually) printed in sorted order and may help to understand how
the restrictions are applied.
@item Ic
Obtain and print traffic counts collected and maintained by the
monitor facility.
The version number should not normally need to be
specified.
@item Ic
Obtain debugging information for a reference clock driver.
This
information is provided only by some clock drivers and is mostly
undecodable without a copy of the driver source in hand.

@end multitable
.Ss
"Runtime
Configuration
Requests"
All requests which cause state changes in the server are
authenticated by the server using a configured NTP key (the
facility can also be disabled by the server by not configuring a
key).
The key number and the corresponding key must also be made
known to
@code{ntpdc}.
This can be done using the
.Ic
keyid
and
.Ic
passwd
commands, the latter of which will prompt at the terminal for a
password to use as the encryption key.
You will also be prompted
automatically for both the key number and password the first time a
command which would result in an authenticated request to the
server is given.
Authentication not only provides verification that
the requester has permission to make such changes, but also gives
an extra degree of protection again transmission errors.

Authenticated requests always include a timestamp in the packet
data, which is included in the computation of the authentication
code.
This timestamp is compared by the server to its receive time
stamp.
If they differ by more than a small amount the request is
rejected.
This is done for two reasons.
First, it makes simple
replay attacks on the server, by someone who might be able to
overhear traffic on your LAN, much more difficult.
Second, it makes
it more difficult to request configuration changes to your server
from topologically remote hosts.
While the reconfiguration facility
will work well with a server on the local host, and may work
adequately between time-synchronized hosts on the same LAN, it will
work very poorly for more distant hosts.
As such, if reasonable
passwords are chosen, care is taken in the distribution and
protection of keys and appropriate source address restrictions are
applied, the run time reconfiguration facility should provide an
adequate level of security.

The following commands all make authenticated requests.
@table @samp
@item Xo
.Op
Ar
keyid
.Op
Ar
version
.Op
Cm
prefer
.Xc
Add a configured peer association at the given address and
operating in symmetric active mode.
Note that an existing
association with the same peer may be deleted when this command is
executed, or may simply be converted to conform to the new
configuration, as appropriate.
If the optional
.Ar
keyid
is a
nonzero integer, all outgoing packets to the remote server will
have an authentication field attached encrypted with this key.
If
the value is 0 (or not given) no authentication will be done.
The
.Ar
version
can be 1, 2 or 3 and defaults to 3.
The
.Cm
prefer
keyword indicates a preferred peer (and thus will
be used primarily for clock synchronisation if possible).
The
preferred peer also determines the validity of the PPS signal - if
the preferred peer is suitable for synchronisation so is the PPS
signal.
@item Xo
.Op
Ar
keyid
.Op
Ar
version
.Op
Cm
prefer
.Xc
Identical to the addpeer command, except that the operating
mode is client.
@item Xo
.Op
Ar
keyid
.Op
Ar
version
.Op
Cm
prefer
.Xc
Identical to the addpeer command, except that the operating
mode is broadcast.
In this case a valid key identifier and key are
required.
The
.Ar
peer_address
parameter can be the broadcast
address of the local network or a multicast group address assigned
to NTP.
If a multicast address, a multicast-capable kernel is
required.
@item Ic
This command causes the configured bit to be removed from the
specified peer(s).
In many cases this will cause the peer
association to be deleted.
When appropriate, however, the
association may persist in an unconfigured mode if the remote peer
is willing to continue on in this fashion.
@item Xo
.Op
Cm
time1
.Op
Cm
time2
.Op
Ar
stratum
.Op
Ar
refid
.Xc
This command provides a way to set certain data for a reference
clock.
See the source listing for further information.
@item Xo
.Oo
.Cm
auth
|
Cm
bclient
|
.Cm
calibrate
|
Cm
kernel
|
.Cm
monitor
|
Cm
ntp
|
.Cm
pps
|
Cm
stats
.Oc
.Xc
@item Xo
.Oo
.Cm
auth
|
Cm
bclient
|
.Cm
calibrate
|
Cm
kernel
|
.Cm
monitor
|
Cm
ntp
|
.Cm
pps
|
Cm
stats
.Oc
.Xc
These commands operate in the same way as the
.Ic
enable
and
.Ic
disable
configuration file commands of
@code{ntpd(8)}.
@table @samp
@item Cm
Enables the server to synchronize with unconfigured peers only
if the peer has been correctly authenticated using either public key
or private key cryptography.
The default for this flag is enable.
@item Cm
Enables the server to listen for a message from a broadcast or
multicast server, as in the multicastclient command with
default address.
The default for this flag is disable.
@item Cm
Enables the calibrate feature for reference clocks.
The default for this flag is disable.
@item Cm
Enables the kernel time discipline, if available.
The default for this flag is enable if support is available, otherwise disable.
@item Cm
Enables the monitoring facility.
See the
@code{ntpdc(8)}.
program and the monlist command or further information.
The default for this flag is enable.
@item Cm
Enables time and frequency discipline.
In effect, this switch opens and closes the feedback loop,
which is useful for testing.
The default for this flag is enable.
@item Cm
Enables the pulse-per-second (PPS) signal when frequency
and time is disciplined by the precision time kernel modifications.
See the
.Qq
A
Kernel
Model
for
Precision
Timekeeping
(available as part of the HTML documentation
provided in
.Pa
/usr/share/doc/ntp
)
page for further information.
The default for this flag is disable.
@item Cm
Enables the statistics facility.
See the
.Sx
Monitoring
Options
section of
@code{ntp.conf(5)}
for further information.
The default for this flag is disable.

@end multitable
.It
Xo
Ic
restrict
Ar
address
Ar
mask
.Ar
flag
Oo
Ar
...
Oc
.Xc
This command operates in the same way as the
.Ic
restrict
configuration file commands of
@code{ntpd(8)}.
.It
Xo
Ic
unrestrict
Ar
address
Ar
mask
.Ar
flag
Oo
Ar
...
Oc
.Xc
Unrestrict the matching entry from the restrict list.
.It
Xo
Ic
delrestrict
Ar
address
Ar
mask
.Op
Cm
ntpport
.Xc
Delete the matching entry from the restrict list.
.It
Ic
readkeys
Causes the current set of authentication keys to be purged and
a new set to be obtained by rereading the keys file (which must
have been specified in the
@code{ntpd(8)}
configuration file).
This
allows encryption keys to be changed without restarting the
server.
.It
Ic
trustedkey
Ar
keyid
Oo
Ar
...
Oc
.It
Ic
untrustedkey
Ar
keyid
Oo
Ar
...
Oc
These commands operate in the same way as the
.Ic
trustedkey
and
.Ic
untrustedkey
configuration file
commands of
@code{ntpd(8)}.
.It
Ic
authinfo
Returns information concerning the authentication module,
including known keys and counts of encryptions and decryptions
which have been done.
.It
Ic
traps
Display the traps set in the server.
See the source listing for
further information.
.It
Xo
Ic
addtrap
Ar
address
.Op
Ar
port
.Op
Ar
interface
.Xc
Set a trap for asynchronous messages.
See the source listing
for further information.
.It
Xo
Ic
clrtrap
Ar
address
.Op
Ar
port
.Op
Ar
interface
.Xc
Clear a trap for asynchronous messages.
See the source listing
for further information.
.It
Ic
reset
Clear the statistics counters in various modules of the server.
See the source listing for further information.

@end multitable
@node ntpdc See Also
@subsection ntpdc See Also
@code{ntp.conf(5)},
@code{ntpd(8)}
.Rs
.%A
David
L.
Mills
.%T
Network
Time
Protocol
(Version
3)
.%O
RFC1305
.Re
@node ntpdc Authors
@subsection ntpdc Authors
The formatting directives in this document came from FreeBSD.
@node ntpdc Bugs
@subsection ntpdc Bugs
The
@code{ntpdc}
utility is a crude hack.
Much of the information it shows is
deadly boring and could only be loved by its implementer.
The
program was designed so that new (and temporary) features were easy
to hack in, at great expense to the program's ease of use.
Despite
this, the program is occasionally useful.

Please report bugs to http://bugs.ntp.org .
